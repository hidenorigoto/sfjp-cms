<?php

/**
 * BaseRepository
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property string $name
 * @property string $repository
 * @property string $subdirectory
 * @property string $bind_path
 * @property string $settings_json
 * @property boolean $force_update
 * @property boolean $force_clone
 * @property Doctrine_Collection $Pages
 * 
 * @method integer             getId()            Returns the current record's "id" value
 * @method string              getName()          Returns the current record's "name" value
 * @method string              getRepository()    Returns the current record's "repository" value
 * @method string              getSubdirectory()  Returns the current record's "subdirectory" value
 * @method string              getBindPath()      Returns the current record's "bind_path" value
 * @method string              getSettingsJson()  Returns the current record's "settings_json" value
 * @method boolean             getForceUpdate()   Returns the current record's "force_update" value
 * @method boolean             getForceClone()    Returns the current record's "force_clone" value
 * @method Doctrine_Collection getPages()         Returns the current record's "Pages" collection
 * @method Repository          setId()            Sets the current record's "id" value
 * @method Repository          setName()          Sets the current record's "name" value
 * @method Repository          setRepository()    Sets the current record's "repository" value
 * @method Repository          setSubdirectory()  Sets the current record's "subdirectory" value
 * @method Repository          setBindPath()      Sets the current record's "bind_path" value
 * @method Repository          setSettingsJson()  Sets the current record's "settings_json" value
 * @method Repository          setForceUpdate()   Sets the current record's "force_update" value
 * @method Repository          setForceClone()    Sets the current record's "force_clone" value
 * @method Repository          setPages()         Sets the current record's "Pages" collection
 * 
 * @package    sfjp-cms
 * @subpackage model
 * @author     hidenorigoto
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseRepository extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('repository');
        $this->hasColumn('id', 'integer', null, array(
             'primary' => true,
             'unsigned' => true,
             'type' => 'integer',
             'autoincrement' => true,
             ));
        $this->hasColumn('name', 'string', null, array(
             'type' => 'string',
             ));
        $this->hasColumn('repository', 'string', 256, array(
             'type' => 'string',
             'notnull' => true,
             'length' => 256,
             ));
        $this->hasColumn('subdirectory', 'string', 256, array(
             'type' => 'string',
             'length' => 256,
             ));
        $this->hasColumn('bind_path', 'string', 128, array(
             'type' => 'string',
             'notnull' => true,
             'length' => 128,
             ));
        $this->hasColumn('settings_json', 'string', 512, array(
             'type' => 'string',
             'length' => 512,
             ));
        $this->hasColumn('force_update', 'boolean', null, array(
             'default' => false,
             'type' => 'boolean',
             ));
        $this->hasColumn('force_clone', 'boolean', null, array(
             'default' => false,
             'type' => 'boolean',
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasMany('Page as Pages', array(
             'local' => 'id',
             'foreign' => 'repository_id'));

        $timestampable0 = new Doctrine_Template_Timestampable();
        $this->actAs($timestampable0);
    }
}