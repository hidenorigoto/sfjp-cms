<?php

/**
 * BaseCommit
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property timestamp $committed_at
 * @property string $author_handle
 * @property string $author_email
 * @property string $committer_handle
 * @property string $committer_email
 * @property string $commit_key
 * @property string $commit_url
 * @property integer $page_id
 * @property Page $Page
 * 
 * @method integer   getId()               Returns the current record's "id" value
 * @method timestamp getCommittedAt()      Returns the current record's "committed_at" value
 * @method string    getAuthorHandle()     Returns the current record's "author_handle" value
 * @method string    getAuthorEmail()      Returns the current record's "author_email" value
 * @method string    getCommitterHandle()  Returns the current record's "committer_handle" value
 * @method string    getCommitterEmail()   Returns the current record's "committer_email" value
 * @method string    getCommitKey()        Returns the current record's "commit_key" value
 * @method string    getCommitUrl()        Returns the current record's "commit_url" value
 * @method integer   getPageId()           Returns the current record's "page_id" value
 * @method Page      getPage()             Returns the current record's "Page" value
 * @method Commit    setId()               Sets the current record's "id" value
 * @method Commit    setCommittedAt()      Sets the current record's "committed_at" value
 * @method Commit    setAuthorHandle()     Sets the current record's "author_handle" value
 * @method Commit    setAuthorEmail()      Sets the current record's "author_email" value
 * @method Commit    setCommitterHandle()  Sets the current record's "committer_handle" value
 * @method Commit    setCommitterEmail()   Sets the current record's "committer_email" value
 * @method Commit    setCommitKey()        Sets the current record's "commit_key" value
 * @method Commit    setCommitUrl()        Sets the current record's "commit_url" value
 * @method Commit    setPageId()           Sets the current record's "page_id" value
 * @method Commit    setPage()             Sets the current record's "Page" value
 * 
 * @package    sfjp-cms
 * @subpackage model
 * @author     hidenorigoto
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseCommit extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('commit');
        $this->hasColumn('id', 'integer', null, array(
             'primary' => true,
             'unsigned' => true,
             'type' => 'integer',
             'autoincrement' => true,
             ));
        $this->hasColumn('committed_at', 'timestamp', null, array(
             'type' => 'timestamp',
             ));
        $this->hasColumn('author_handle', 'string', 255, array(
             'type' => 'string',
             'length' => 255,
             ));
        $this->hasColumn('author_email', 'string', 255, array(
             'type' => 'string',
             'length' => 255,
             ));
        $this->hasColumn('committer_handle', 'string', 255, array(
             'type' => 'string',
             'length' => 255,
             ));
        $this->hasColumn('committer_email', 'string', 255, array(
             'type' => 'string',
             'length' => 255,
             ));
        $this->hasColumn('commit_key', 'string', 255, array(
             'type' => 'string',
             'length' => 255,
             ));
        $this->hasColumn('commit_url', 'string', 512, array(
             'type' => 'string',
             'length' => 512,
             ));
        $this->hasColumn('page_id', 'integer', null, array(
             'unsigned' => true,
             'type' => 'integer',
             'notnull' => true,
             ));


        $this->index('IX_Commit_1', array(
             'fields' => 
             array(
              0 => 'commit_key',
              1 => 'page_id',
             ),
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('Page', array(
             'local' => 'page_id',
             'foreign' => 'id',
             'onDelete' => 'CASCADE'));
    }
}