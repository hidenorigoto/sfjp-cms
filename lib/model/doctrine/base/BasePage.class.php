<?php

/**
 * BasePage
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property integer $repository_id
 * @property string $path
 * @property clob $content_raw
 * @property string $content_type
 * @property clob $content_rendered
 * @property string $title
 * @property string $index_json
 * @property timestamp $last_updated
 * @property Repository $Repository
 * @property Doctrine_Collection $Commits
 * 
 * @method integer             getId()               Returns the current record's "id" value
 * @method integer             getRepositoryId()     Returns the current record's "repository_id" value
 * @method string              getPath()             Returns the current record's "path" value
 * @method clob                getContentRaw()       Returns the current record's "content_raw" value
 * @method string              getContentType()      Returns the current record's "content_type" value
 * @method clob                getContentRendered()  Returns the current record's "content_rendered" value
 * @method string              getTitle()            Returns the current record's "title" value
 * @method string              getIndexJson()        Returns the current record's "index_json" value
 * @method timestamp           getLastUpdated()      Returns the current record's "last_updated" value
 * @method Repository          getRepository()       Returns the current record's "Repository" value
 * @method Doctrine_Collection getCommits()          Returns the current record's "Commits" collection
 * @method Page                setId()               Sets the current record's "id" value
 * @method Page                setRepositoryId()     Sets the current record's "repository_id" value
 * @method Page                setPath()             Sets the current record's "path" value
 * @method Page                setContentRaw()       Sets the current record's "content_raw" value
 * @method Page                setContentType()      Sets the current record's "content_type" value
 * @method Page                setContentRendered()  Sets the current record's "content_rendered" value
 * @method Page                setTitle()            Sets the current record's "title" value
 * @method Page                setIndexJson()        Sets the current record's "index_json" value
 * @method Page                setLastUpdated()      Sets the current record's "last_updated" value
 * @method Page                setRepository()       Sets the current record's "Repository" value
 * @method Page                setCommits()          Sets the current record's "Commits" collection
 * 
 * @package    prj
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BasePage extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('page');
        $this->hasColumn('id', 'integer', null, array(
             'primary' => true,
             'unsigned' => true,
             'type' => 'integer',
             'autoincrement' => true,
             ));
        $this->hasColumn('repository_id', 'integer', null, array(
             'unsigned' => true,
             'type' => 'integer',
             'notnull' => true,
             ));
        $this->hasColumn('path', 'string', 255, array(
             'type' => 'string',
             'notnull' => true,
             'length' => 255,
             ));
        $this->hasColumn('content_raw', 'clob', null, array(
             'type' => 'clob',
             ));
        $this->hasColumn('content_type', 'string', 32, array(
             'type' => 'string',
             'length' => 32,
             ));
        $this->hasColumn('content_rendered', 'clob', null, array(
             'type' => 'clob',
             ));
        $this->hasColumn('title', 'string', 255, array(
             'type' => 'string',
             'length' => 255,
             ));
        $this->hasColumn('index_json', 'string', null, array(
             'type' => 'string',
             ));
        $this->hasColumn('last_updated', 'timestamp', null, array(
             'type' => 'timestamp',
             ));


        $this->index('IX_Page_1', array(
             'fields' => 
             array(
              0 => 'path',
             ),
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('Repository', array(
             'local' => 'repository_id',
             'foreign' => 'id',
             'onDelete' => 'CASCADE'));

        $this->hasMany('Commit as Commits', array(
             'local' => 'id',
             'foreign' => 'page_id'));

        $timestampable0 = new Doctrine_Template_Timestampable();
        $this->actAs($timestampable0);
    }
}